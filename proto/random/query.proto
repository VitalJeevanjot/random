syntax = "proto3";
package genievot.random.random;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "random/randomval.proto";
import "random/userval.proto";
import "random/sent_randomval.proto";
import "random/timedout_randomval.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/genievot/random/x/random/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a randomval by index.
	rpc Randomval(QueryGetRandomvalRequest) returns (QueryGetRandomvalResponse) {
		option (google.api.http).get = "/genievot/random/random/randomval/{index}";
	}

	// Queries a list of randomval items.
	rpc RandomvalAll(QueryAllRandomvalRequest) returns (QueryAllRandomvalResponse) {
		option (google.api.http).get = "/genievot/random/random/randomval";
	}

// Queries a userval by index.
	rpc Userval(QueryGetUservalRequest) returns (QueryGetUservalResponse) {
		option (google.api.http).get = "/genievot/random/random/userval/{index}";
	}

	// Queries a list of userval items.
	rpc UservalAll(QueryAllUservalRequest) returns (QueryAllUservalResponse) {
		option (google.api.http).get = "/genievot/random/random/userval";
	}

// Queries a list of verifyValues items.
	rpc VerifyValues(QueryVerifyValuesRequest) returns (QueryVerifyValuesResponse) {
		option (google.api.http).get = "/genievot/random/random/verifyValues";
	}

// Queries a sentRandomval by id.
	rpc SentRandomval(QueryGetSentRandomvalRequest) returns (QueryGetSentRandomvalResponse) {
		option (google.api.http).get = "/genievot/random/random/sentRandomval/{id}";
	}

	// Queries a list of sentRandomval items.
	rpc SentRandomvalAll(QueryAllSentRandomvalRequest) returns (QueryAllSentRandomvalResponse) {
		option (google.api.http).get = "/genievot/random/random/sentRandomval";
	}

// Queries a timedoutRandomval by id.
	rpc TimedoutRandomval(QueryGetTimedoutRandomvalRequest) returns (QueryGetTimedoutRandomvalResponse) {
		option (google.api.http).get = "/genievot/random/random/timedoutRandomval/{id}";
	}

	// Queries a list of timedoutRandomval items.
	rpc TimedoutRandomvalAll(QueryAllTimedoutRandomvalRequest) returns (QueryAllTimedoutRandomvalResponse) {
		option (google.api.http).get = "/genievot/random/random/timedoutRandomval";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetRandomvalRequest {
	  string index = 1;

}

message QueryGetRandomvalResponse {
	Randomval randomval = 1 [(gogoproto.nullable) = false];
}

message QueryAllRandomvalRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRandomvalResponse {
	repeated Randomval randomval = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetUservalRequest {
	  string index = 1;

}

message QueryGetUservalResponse {
	Userval userval = 1 [(gogoproto.nullable) = false];
}

message QueryAllUservalRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllUservalResponse {
	repeated Userval userval = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryVerifyValuesRequest {
  string pubkey = 1;
  string message = 2;
  string vrv = 3;
  string proof = 4;
}

message QueryVerifyValuesResponse {
  string verified = 1;
}

message QueryGetSentRandomvalRequest {
	uint64 id = 1;
}

message QueryGetSentRandomvalResponse {
	SentRandomval SentRandomval = 1 [(gogoproto.nullable) = false];
}

message QueryAllSentRandomvalRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSentRandomvalResponse {
	repeated SentRandomval SentRandomval = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetTimedoutRandomvalRequest {
	uint64 id = 1;
}

message QueryGetTimedoutRandomvalResponse {
	TimedoutRandomval TimedoutRandomval = 1 [(gogoproto.nullable) = false];
}

message QueryAllTimedoutRandomvalRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTimedoutRandomvalResponse {
	repeated TimedoutRandomval TimedoutRandomval = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
