syntax = "proto3";
package genievot.random.random;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "random/randomval.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/genievot/random/x/random/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a randomval by index.
	rpc Randomval(QueryGetRandomvalRequest) returns (QueryGetRandomvalResponse) {
		option (google.api.http).get = "/genievot/random/random/randomval/{index}";
	}

	// Queries a list of randomval items.
	rpc RandomvalAll(QueryAllRandomvalRequest) returns (QueryAllRandomvalResponse) {
		option (google.api.http).get = "/genievot/random/random/randomval";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetRandomvalRequest {
	  string index = 1;

}

message QueryGetRandomvalResponse {
	Randomval randomval = 1 [(gogoproto.nullable) = false];
}

message QueryAllRandomvalRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRandomvalResponse {
	repeated Randomval randomval = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
