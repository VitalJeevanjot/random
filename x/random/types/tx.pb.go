// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: random/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateRandom struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Multiplier uint64 `protobuf:"varint,2,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
}

func (m *MsgCreateRandom) Reset()         { *m = MsgCreateRandom{} }
func (m *MsgCreateRandom) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRandom) ProtoMessage()    {}
func (*MsgCreateRandom) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{0}
}
func (m *MsgCreateRandom) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRandom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRandom.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRandom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRandom.Merge(m, src)
}
func (m *MsgCreateRandom) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRandom) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRandom.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRandom proto.InternalMessageInfo

func (m *MsgCreateRandom) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateRandom) GetMultiplier() uint64 {
	if m != nil {
		return m.Multiplier
	}
	return 0
}

type MsgCreateRandomResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateRandomResponse) Reset()         { *m = MsgCreateRandomResponse{} }
func (m *MsgCreateRandomResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRandomResponse) ProtoMessage()    {}
func (*MsgCreateRandomResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{1}
}
func (m *MsgCreateRandomResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRandomResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRandomResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRandomResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRandomResponse.Merge(m, src)
}
func (m *MsgCreateRandomResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRandomResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRandomResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRandomResponse proto.InternalMessageInfo

func (m *MsgCreateRandomResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MsgSendReqRandomval struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Port             string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	ChannelID        string `protobuf:"bytes,3,opt,name=channelID,proto3" json:"channelID,omitempty"`
	TimeoutTimestamp uint64 `protobuf:"varint,4,opt,name=timeoutTimestamp,proto3" json:"timeoutTimestamp,omitempty"`
	Multiplier       string `protobuf:"bytes,5,opt,name=multiplier,proto3" json:"multiplier,omitempty"`
}

func (m *MsgSendReqRandomval) Reset()         { *m = MsgSendReqRandomval{} }
func (m *MsgSendReqRandomval) String() string { return proto.CompactTextString(m) }
func (*MsgSendReqRandomval) ProtoMessage()    {}
func (*MsgSendReqRandomval) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{2}
}
func (m *MsgSendReqRandomval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendReqRandomval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendReqRandomval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendReqRandomval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendReqRandomval.Merge(m, src)
}
func (m *MsgSendReqRandomval) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendReqRandomval) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendReqRandomval.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendReqRandomval proto.InternalMessageInfo

func (m *MsgSendReqRandomval) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSendReqRandomval) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *MsgSendReqRandomval) GetChannelID() string {
	if m != nil {
		return m.ChannelID
	}
	return ""
}

func (m *MsgSendReqRandomval) GetTimeoutTimestamp() uint64 {
	if m != nil {
		return m.TimeoutTimestamp
	}
	return 0
}

func (m *MsgSendReqRandomval) GetMultiplier() string {
	if m != nil {
		return m.Multiplier
	}
	return ""
}

type MsgSendReqRandomvalResponse struct {
}

func (m *MsgSendReqRandomvalResponse) Reset()         { *m = MsgSendReqRandomvalResponse{} }
func (m *MsgSendReqRandomvalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSendReqRandomvalResponse) ProtoMessage()    {}
func (*MsgSendReqRandomvalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{3}
}
func (m *MsgSendReqRandomvalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSendReqRandomvalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendReqRandomvalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSendReqRandomvalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendReqRandomvalResponse.Merge(m, src)
}
func (m *MsgSendReqRandomvalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSendReqRandomvalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendReqRandomvalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendReqRandomvalResponse proto.InternalMessageInfo

type MsgCreateSentRandomval struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Userid  string `protobuf:"bytes,2,opt,name=userid,proto3" json:"userid,omitempty"`
	Vrv     string `protobuf:"bytes,3,opt,name=vrv,proto3" json:"vrv,omitempty"`
}

func (m *MsgCreateSentRandomval) Reset()         { *m = MsgCreateSentRandomval{} }
func (m *MsgCreateSentRandomval) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSentRandomval) ProtoMessage()    {}
func (*MsgCreateSentRandomval) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{4}
}
func (m *MsgCreateSentRandomval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSentRandomval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSentRandomval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSentRandomval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSentRandomval.Merge(m, src)
}
func (m *MsgCreateSentRandomval) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSentRandomval) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSentRandomval.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSentRandomval proto.InternalMessageInfo

func (m *MsgCreateSentRandomval) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSentRandomval) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *MsgCreateSentRandomval) GetVrv() string {
	if m != nil {
		return m.Vrv
	}
	return ""
}

type MsgCreateSentRandomvalResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSentRandomvalResponse) Reset()         { *m = MsgCreateSentRandomvalResponse{} }
func (m *MsgCreateSentRandomvalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSentRandomvalResponse) ProtoMessage()    {}
func (*MsgCreateSentRandomvalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{5}
}
func (m *MsgCreateSentRandomvalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSentRandomvalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSentRandomvalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSentRandomvalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSentRandomvalResponse.Merge(m, src)
}
func (m *MsgCreateSentRandomvalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSentRandomvalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSentRandomvalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSentRandomvalResponse proto.InternalMessageInfo

func (m *MsgCreateSentRandomvalResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSentRandomval struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Userid  string `protobuf:"bytes,3,opt,name=userid,proto3" json:"userid,omitempty"`
	Vrv     string `protobuf:"bytes,4,opt,name=vrv,proto3" json:"vrv,omitempty"`
}

func (m *MsgUpdateSentRandomval) Reset()         { *m = MsgUpdateSentRandomval{} }
func (m *MsgUpdateSentRandomval) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSentRandomval) ProtoMessage()    {}
func (*MsgUpdateSentRandomval) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{6}
}
func (m *MsgUpdateSentRandomval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSentRandomval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSentRandomval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSentRandomval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSentRandomval.Merge(m, src)
}
func (m *MsgUpdateSentRandomval) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSentRandomval) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSentRandomval.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSentRandomval proto.InternalMessageInfo

func (m *MsgUpdateSentRandomval) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSentRandomval) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSentRandomval) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *MsgUpdateSentRandomval) GetVrv() string {
	if m != nil {
		return m.Vrv
	}
	return ""
}

type MsgUpdateSentRandomvalResponse struct {
}

func (m *MsgUpdateSentRandomvalResponse) Reset()         { *m = MsgUpdateSentRandomvalResponse{} }
func (m *MsgUpdateSentRandomvalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSentRandomvalResponse) ProtoMessage()    {}
func (*MsgUpdateSentRandomvalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{7}
}
func (m *MsgUpdateSentRandomvalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSentRandomvalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSentRandomvalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSentRandomvalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSentRandomvalResponse.Merge(m, src)
}
func (m *MsgUpdateSentRandomvalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSentRandomvalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSentRandomvalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSentRandomvalResponse proto.InternalMessageInfo

type MsgDeleteSentRandomval struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSentRandomval) Reset()         { *m = MsgDeleteSentRandomval{} }
func (m *MsgDeleteSentRandomval) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSentRandomval) ProtoMessage()    {}
func (*MsgDeleteSentRandomval) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{8}
}
func (m *MsgDeleteSentRandomval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSentRandomval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSentRandomval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSentRandomval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSentRandomval.Merge(m, src)
}
func (m *MsgDeleteSentRandomval) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSentRandomval) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSentRandomval.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSentRandomval proto.InternalMessageInfo

func (m *MsgDeleteSentRandomval) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSentRandomval) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSentRandomvalResponse struct {
}

func (m *MsgDeleteSentRandomvalResponse) Reset()         { *m = MsgDeleteSentRandomvalResponse{} }
func (m *MsgDeleteSentRandomvalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSentRandomvalResponse) ProtoMessage()    {}
func (*MsgDeleteSentRandomvalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{9}
}
func (m *MsgDeleteSentRandomvalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSentRandomvalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSentRandomvalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSentRandomvalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSentRandomvalResponse.Merge(m, src)
}
func (m *MsgDeleteSentRandomvalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSentRandomvalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSentRandomvalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSentRandomvalResponse proto.InternalMessageInfo

type MsgCreateTimedoutRandomval struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Userid  string `protobuf:"bytes,2,opt,name=userid,proto3" json:"userid,omitempty"`
	Vrv     string `protobuf:"bytes,3,opt,name=vrv,proto3" json:"vrv,omitempty"`
}

func (m *MsgCreateTimedoutRandomval) Reset()         { *m = MsgCreateTimedoutRandomval{} }
func (m *MsgCreateTimedoutRandomval) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimedoutRandomval) ProtoMessage()    {}
func (*MsgCreateTimedoutRandomval) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{10}
}
func (m *MsgCreateTimedoutRandomval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimedoutRandomval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimedoutRandomval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimedoutRandomval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimedoutRandomval.Merge(m, src)
}
func (m *MsgCreateTimedoutRandomval) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimedoutRandomval) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimedoutRandomval.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimedoutRandomval proto.InternalMessageInfo

func (m *MsgCreateTimedoutRandomval) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTimedoutRandomval) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *MsgCreateTimedoutRandomval) GetVrv() string {
	if m != nil {
		return m.Vrv
	}
	return ""
}

type MsgCreateTimedoutRandomvalResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTimedoutRandomvalResponse) Reset()         { *m = MsgCreateTimedoutRandomvalResponse{} }
func (m *MsgCreateTimedoutRandomvalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimedoutRandomvalResponse) ProtoMessage()    {}
func (*MsgCreateTimedoutRandomvalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{11}
}
func (m *MsgCreateTimedoutRandomvalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimedoutRandomvalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimedoutRandomvalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimedoutRandomvalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimedoutRandomvalResponse.Merge(m, src)
}
func (m *MsgCreateTimedoutRandomvalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimedoutRandomvalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimedoutRandomvalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimedoutRandomvalResponse proto.InternalMessageInfo

func (m *MsgCreateTimedoutRandomvalResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTimedoutRandomval struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Userid  string `protobuf:"bytes,3,opt,name=userid,proto3" json:"userid,omitempty"`
	Vrv     string `protobuf:"bytes,4,opt,name=vrv,proto3" json:"vrv,omitempty"`
}

func (m *MsgUpdateTimedoutRandomval) Reset()         { *m = MsgUpdateTimedoutRandomval{} }
func (m *MsgUpdateTimedoutRandomval) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimedoutRandomval) ProtoMessage()    {}
func (*MsgUpdateTimedoutRandomval) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{12}
}
func (m *MsgUpdateTimedoutRandomval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimedoutRandomval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimedoutRandomval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimedoutRandomval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimedoutRandomval.Merge(m, src)
}
func (m *MsgUpdateTimedoutRandomval) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimedoutRandomval) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimedoutRandomval.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimedoutRandomval proto.InternalMessageInfo

func (m *MsgUpdateTimedoutRandomval) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTimedoutRandomval) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTimedoutRandomval) GetUserid() string {
	if m != nil {
		return m.Userid
	}
	return ""
}

func (m *MsgUpdateTimedoutRandomval) GetVrv() string {
	if m != nil {
		return m.Vrv
	}
	return ""
}

type MsgUpdateTimedoutRandomvalResponse struct {
}

func (m *MsgUpdateTimedoutRandomvalResponse) Reset()         { *m = MsgUpdateTimedoutRandomvalResponse{} }
func (m *MsgUpdateTimedoutRandomvalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimedoutRandomvalResponse) ProtoMessage()    {}
func (*MsgUpdateTimedoutRandomvalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{13}
}
func (m *MsgUpdateTimedoutRandomvalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimedoutRandomvalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimedoutRandomvalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimedoutRandomvalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimedoutRandomvalResponse.Merge(m, src)
}
func (m *MsgUpdateTimedoutRandomvalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimedoutRandomvalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimedoutRandomvalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimedoutRandomvalResponse proto.InternalMessageInfo

type MsgDeleteTimedoutRandomval struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTimedoutRandomval) Reset()         { *m = MsgDeleteTimedoutRandomval{} }
func (m *MsgDeleteTimedoutRandomval) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimedoutRandomval) ProtoMessage()    {}
func (*MsgDeleteTimedoutRandomval) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{14}
}
func (m *MsgDeleteTimedoutRandomval) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimedoutRandomval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimedoutRandomval.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimedoutRandomval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimedoutRandomval.Merge(m, src)
}
func (m *MsgDeleteTimedoutRandomval) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimedoutRandomval) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimedoutRandomval.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimedoutRandomval proto.InternalMessageInfo

func (m *MsgDeleteTimedoutRandomval) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTimedoutRandomval) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTimedoutRandomvalResponse struct {
}

func (m *MsgDeleteTimedoutRandomvalResponse) Reset()         { *m = MsgDeleteTimedoutRandomvalResponse{} }
func (m *MsgDeleteTimedoutRandomvalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimedoutRandomvalResponse) ProtoMessage()    {}
func (*MsgDeleteTimedoutRandomvalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8734007206ce5490, []int{15}
}
func (m *MsgDeleteTimedoutRandomvalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimedoutRandomvalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimedoutRandomvalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimedoutRandomvalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimedoutRandomvalResponse.Merge(m, src)
}
func (m *MsgDeleteTimedoutRandomvalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimedoutRandomvalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimedoutRandomvalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimedoutRandomvalResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateRandom)(nil), "genievot.random.random.MsgCreateRandom")
	proto.RegisterType((*MsgCreateRandomResponse)(nil), "genievot.random.random.MsgCreateRandomResponse")
	proto.RegisterType((*MsgSendReqRandomval)(nil), "genievot.random.random.MsgSendReqRandomval")
	proto.RegisterType((*MsgSendReqRandomvalResponse)(nil), "genievot.random.random.MsgSendReqRandomvalResponse")
	proto.RegisterType((*MsgCreateSentRandomval)(nil), "genievot.random.random.MsgCreateSentRandomval")
	proto.RegisterType((*MsgCreateSentRandomvalResponse)(nil), "genievot.random.random.MsgCreateSentRandomvalResponse")
	proto.RegisterType((*MsgUpdateSentRandomval)(nil), "genievot.random.random.MsgUpdateSentRandomval")
	proto.RegisterType((*MsgUpdateSentRandomvalResponse)(nil), "genievot.random.random.MsgUpdateSentRandomvalResponse")
	proto.RegisterType((*MsgDeleteSentRandomval)(nil), "genievot.random.random.MsgDeleteSentRandomval")
	proto.RegisterType((*MsgDeleteSentRandomvalResponse)(nil), "genievot.random.random.MsgDeleteSentRandomvalResponse")
	proto.RegisterType((*MsgCreateTimedoutRandomval)(nil), "genievot.random.random.MsgCreateTimedoutRandomval")
	proto.RegisterType((*MsgCreateTimedoutRandomvalResponse)(nil), "genievot.random.random.MsgCreateTimedoutRandomvalResponse")
	proto.RegisterType((*MsgUpdateTimedoutRandomval)(nil), "genievot.random.random.MsgUpdateTimedoutRandomval")
	proto.RegisterType((*MsgUpdateTimedoutRandomvalResponse)(nil), "genievot.random.random.MsgUpdateTimedoutRandomvalResponse")
	proto.RegisterType((*MsgDeleteTimedoutRandomval)(nil), "genievot.random.random.MsgDeleteTimedoutRandomval")
	proto.RegisterType((*MsgDeleteTimedoutRandomvalResponse)(nil), "genievot.random.random.MsgDeleteTimedoutRandomvalResponse")
}

func init() { proto.RegisterFile("random/tx.proto", fileDescriptor_8734007206ce5490) }

var fileDescriptor_8734007206ce5490 = []byte{
	// 589 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe3, 0x24, 0x14, 0x32, 0x42, 0x34, 0xda, 0x4a, 0xa9, 0xe5, 0x82, 0x89, 0x2c, 0x24,
	0x5a, 0x90, 0x1c, 0x94, 0x22, 0x0e, 0x1c, 0xdb, 0x0a, 0x09, 0xa1, 0x5c, 0xdc, 0x72, 0x41, 0x48,
	0xe0, 0xc6, 0x2b, 0xc7, 0x92, 0xed, 0x35, 0xde, 0x75, 0x54, 0x0e, 0x5c, 0x91, 0xb8, 0xf1, 0x22,
	0xbc, 0x07, 0xc7, 0x1e, 0x39, 0xa2, 0xe4, 0x45, 0x50, 0xd6, 0x6b, 0x37, 0x7f, 0xd6, 0x76, 0x5d,
	0x7a, 0xca, 0xda, 0x3b, 0xfb, 0x7d, 0xbf, 0x99, 0xcd, 0x8c, 0x0c, 0xdb, 0xb1, 0x1d, 0x3a, 0x24,
	0x18, 0xb0, 0x0b, 0x33, 0x8a, 0x09, 0x23, 0xa8, 0xe7, 0xe2, 0xd0, 0xc3, 0x53, 0xc2, 0xcc, 0x74,
	0x47, 0xfc, 0x68, 0x7b, 0x22, 0x90, 0xe2, 0x90, 0x7d, 0x4a, 0xd7, 0x53, 0xdb, 0x4f, 0x0f, 0x69,
	0x8f, 0x33, 0x15, 0x2f, 0xc0, 0x0e, 0x49, 0x36, 0x02, 0x8c, 0x77, 0xb0, 0x3d, 0xa2, 0xee, 0x71,
	0x8c, 0x6d, 0x86, 0x2d, 0xbe, 0x87, 0x54, 0xb8, 0x3b, 0x5e, 0x3c, 0x93, 0x58, 0x55, 0xfa, 0xca,
	0x7e, 0xc7, 0xca, 0x1e, 0x91, 0x0e, 0x10, 0x24, 0x3e, 0xf3, 0x22, 0xdf, 0xc3, 0xb1, 0xda, 0xec,
	0x2b, 0xfb, 0x6d, 0x6b, 0xe9, 0x8d, 0x71, 0x00, 0xbb, 0x6b, 0x62, 0x16, 0xa6, 0x11, 0x09, 0x29,
	0x46, 0x0f, 0xa0, 0xe9, 0x39, 0x42, 0xaf, 0xe9, 0x39, 0xc6, 0x2f, 0x05, 0x76, 0x46, 0xd4, 0x3d,
	0xc5, 0xa1, 0x63, 0xe1, 0x2f, 0x56, 0x46, 0x55, 0x62, 0x8e, 0xa0, 0x1d, 0x91, 0x98, 0x71, 0xdb,
	0x8e, 0xc5, 0xd7, 0xe8, 0x21, 0x74, 0xc6, 0x13, 0x3b, 0x0c, 0xb1, 0xff, 0xf6, 0x44, 0x6d, 0xf1,
	0x8d, 0xab, 0x17, 0xe8, 0x19, 0x74, 0x17, 0x79, 0x93, 0x84, 0x9d, 0x79, 0x01, 0xa6, 0xcc, 0x0e,
	0x22, 0xb5, 0xcd, 0xa1, 0x37, 0xde, 0xaf, 0xa5, 0x76, 0x87, 0x4b, 0x2d, 0xa7, 0xf6, 0x08, 0xf6,
	0x24, 0xb8, 0x59, 0x7a, 0xc6, 0x47, 0xe8, 0xe5, 0x99, 0x9f, 0xe2, 0x90, 0x5d, 0x27, 0xa1, 0x1e,
	0x6c, 0x25, 0x14, 0xc7, 0x9e, 0x23, 0x52, 0x12, 0x4f, 0xa8, 0x0b, 0xad, 0x69, 0x3c, 0x15, 0xe9,
	0x2c, 0x96, 0xc6, 0x0b, 0xd0, 0xe5, 0xea, 0x92, 0xf2, 0xb6, 0x79, 0x79, 0x7d, 0xce, 0xf3, 0x3e,
	0x72, 0x6a, 0xf0, 0xa4, 0x1a, 0xcd, 0x4c, 0x63, 0x89, 0xaf, 0x25, 0xe3, 0x6b, 0x5f, 0xf1, 0xf5,
	0x39, 0x9f, 0xc4, 0x2d, 0xaf, 0xcf, 0x11, 0xe7, 0x39, 0xc1, 0x3e, 0xbe, 0x31, 0x8f, 0x70, 0x91,
	0x68, 0xe4, 0x2e, 0x9f, 0x41, 0xcb, 0xeb, 0x74, 0x26, 0xfe, 0xf1, 0xb7, 0x7b, 0x13, 0x2f, 0xc1,
	0x28, 0x76, 0x28, 0xbc, 0x8d, 0x88, 0x73, 0xa5, 0xf5, 0xa9, 0xc3, 0x75, 0xf3, 0x1b, 0x79, 0xc2,
	0x39, 0x0b, 0x1c, 0xf3, 0x7a, 0xbd, 0xe1, 0x5c, 0x69, 0x45, 0xff, 0x83, 0x4b, 0xb8, 0x15, 0xe8,
	0x64, 0x6e, 0xc3, 0xef, 0xf7, 0xa0, 0x35, 0xa2, 0x2e, 0x9a, 0xc0, 0xfd, 0x95, 0x79, 0xf3, 0xd4,
	0x94, 0x4f, 0x36, 0x73, 0x6d, 0x96, 0x68, 0x83, 0x6b, 0x06, 0xe6, 0xf7, 0xc0, 0xa0, 0xbb, 0x31,
	0x60, 0x9e, 0x97, 0x88, 0xac, 0x07, 0x6b, 0x87, 0x35, 0x82, 0x73, 0xd7, 0x6f, 0xb0, 0x23, 0x1b,
	0x04, 0x66, 0x25, 0xfd, 0x4a, 0xbc, 0xf6, 0xaa, 0x5e, 0xfc, 0xb2, 0xbd, 0xac, 0xef, 0xcb, 0xec,
	0x25, 0xf1, 0xa5, 0xf6, 0x25, 0x9d, 0xbe, 0xb0, 0x97, 0xb5, 0x79, 0x99, 0xbd, 0x24, 0xbe, 0xd4,
	0xbe, 0x64, 0x04, 0xa0, 0x1f, 0x0a, 0xec, 0x16, 0x0d, 0x80, 0x61, 0x65, 0x45, 0x37, 0xce, 0x68,
	0xaf, 0xeb, 0x9f, 0x59, 0x61, 0x29, 0x6a, 0xfa, 0x61, 0x65, 0x79, 0xeb, 0xb1, 0x54, 0xb4, 0x3a,
	0x67, 0x29, 0x6a, 0xf4, 0x61, 0x65, 0xad, 0xeb, 0xb1, 0x54, 0x0c, 0x82, 0xa3, 0xe3, 0xdf, 0x33,
	0x5d, 0xb9, 0x9c, 0xe9, 0xca, 0xdf, 0x99, 0xae, 0xfc, 0x9c, 0xeb, 0x8d, 0xcb, 0xb9, 0xde, 0xf8,
	0x33, 0xd7, 0x1b, 0x1f, 0x0e, 0x5c, 0x8f, 0x4d, 0x92, 0x73, 0x73, 0x4c, 0x82, 0x41, 0xa6, 0x3f,
	0x10, 0x9f, 0x30, 0x17, 0xd9, 0x82, 0x7d, 0x8d, 0x30, 0x3d, 0xdf, 0xe2, 0xdf, 0x2f, 0x87, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x33, 0x17, 0x2f, 0x44, 0x28, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateRandom(ctx context.Context, in *MsgCreateRandom, opts ...grpc.CallOption) (*MsgCreateRandomResponse, error)
	SendReqRandomval(ctx context.Context, in *MsgSendReqRandomval, opts ...grpc.CallOption) (*MsgSendReqRandomvalResponse, error)
	CreateSentRandomval(ctx context.Context, in *MsgCreateSentRandomval, opts ...grpc.CallOption) (*MsgCreateSentRandomvalResponse, error)
	UpdateSentRandomval(ctx context.Context, in *MsgUpdateSentRandomval, opts ...grpc.CallOption) (*MsgUpdateSentRandomvalResponse, error)
	DeleteSentRandomval(ctx context.Context, in *MsgDeleteSentRandomval, opts ...grpc.CallOption) (*MsgDeleteSentRandomvalResponse, error)
	CreateTimedoutRandomval(ctx context.Context, in *MsgCreateTimedoutRandomval, opts ...grpc.CallOption) (*MsgCreateTimedoutRandomvalResponse, error)
	UpdateTimedoutRandomval(ctx context.Context, in *MsgUpdateTimedoutRandomval, opts ...grpc.CallOption) (*MsgUpdateTimedoutRandomvalResponse, error)
	DeleteTimedoutRandomval(ctx context.Context, in *MsgDeleteTimedoutRandomval, opts ...grpc.CallOption) (*MsgDeleteTimedoutRandomvalResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateRandom(ctx context.Context, in *MsgCreateRandom, opts ...grpc.CallOption) (*MsgCreateRandomResponse, error) {
	out := new(MsgCreateRandomResponse)
	err := c.cc.Invoke(ctx, "/genievot.random.random.Msg/CreateRandom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SendReqRandomval(ctx context.Context, in *MsgSendReqRandomval, opts ...grpc.CallOption) (*MsgSendReqRandomvalResponse, error) {
	out := new(MsgSendReqRandomvalResponse)
	err := c.cc.Invoke(ctx, "/genievot.random.random.Msg/SendReqRandomval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSentRandomval(ctx context.Context, in *MsgCreateSentRandomval, opts ...grpc.CallOption) (*MsgCreateSentRandomvalResponse, error) {
	out := new(MsgCreateSentRandomvalResponse)
	err := c.cc.Invoke(ctx, "/genievot.random.random.Msg/CreateSentRandomval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSentRandomval(ctx context.Context, in *MsgUpdateSentRandomval, opts ...grpc.CallOption) (*MsgUpdateSentRandomvalResponse, error) {
	out := new(MsgUpdateSentRandomvalResponse)
	err := c.cc.Invoke(ctx, "/genievot.random.random.Msg/UpdateSentRandomval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSentRandomval(ctx context.Context, in *MsgDeleteSentRandomval, opts ...grpc.CallOption) (*MsgDeleteSentRandomvalResponse, error) {
	out := new(MsgDeleteSentRandomvalResponse)
	err := c.cc.Invoke(ctx, "/genievot.random.random.Msg/DeleteSentRandomval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTimedoutRandomval(ctx context.Context, in *MsgCreateTimedoutRandomval, opts ...grpc.CallOption) (*MsgCreateTimedoutRandomvalResponse, error) {
	out := new(MsgCreateTimedoutRandomvalResponse)
	err := c.cc.Invoke(ctx, "/genievot.random.random.Msg/CreateTimedoutRandomval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTimedoutRandomval(ctx context.Context, in *MsgUpdateTimedoutRandomval, opts ...grpc.CallOption) (*MsgUpdateTimedoutRandomvalResponse, error) {
	out := new(MsgUpdateTimedoutRandomvalResponse)
	err := c.cc.Invoke(ctx, "/genievot.random.random.Msg/UpdateTimedoutRandomval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTimedoutRandomval(ctx context.Context, in *MsgDeleteTimedoutRandomval, opts ...grpc.CallOption) (*MsgDeleteTimedoutRandomvalResponse, error) {
	out := new(MsgDeleteTimedoutRandomvalResponse)
	err := c.cc.Invoke(ctx, "/genievot.random.random.Msg/DeleteTimedoutRandomval", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateRandom(context.Context, *MsgCreateRandom) (*MsgCreateRandomResponse, error)
	SendReqRandomval(context.Context, *MsgSendReqRandomval) (*MsgSendReqRandomvalResponse, error)
	CreateSentRandomval(context.Context, *MsgCreateSentRandomval) (*MsgCreateSentRandomvalResponse, error)
	UpdateSentRandomval(context.Context, *MsgUpdateSentRandomval) (*MsgUpdateSentRandomvalResponse, error)
	DeleteSentRandomval(context.Context, *MsgDeleteSentRandomval) (*MsgDeleteSentRandomvalResponse, error)
	CreateTimedoutRandomval(context.Context, *MsgCreateTimedoutRandomval) (*MsgCreateTimedoutRandomvalResponse, error)
	UpdateTimedoutRandomval(context.Context, *MsgUpdateTimedoutRandomval) (*MsgUpdateTimedoutRandomvalResponse, error)
	DeleteTimedoutRandomval(context.Context, *MsgDeleteTimedoutRandomval) (*MsgDeleteTimedoutRandomvalResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateRandom(ctx context.Context, req *MsgCreateRandom) (*MsgCreateRandomResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRandom not implemented")
}
func (*UnimplementedMsgServer) SendReqRandomval(ctx context.Context, req *MsgSendReqRandomval) (*MsgSendReqRandomvalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendReqRandomval not implemented")
}
func (*UnimplementedMsgServer) CreateSentRandomval(ctx context.Context, req *MsgCreateSentRandomval) (*MsgCreateSentRandomvalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSentRandomval not implemented")
}
func (*UnimplementedMsgServer) UpdateSentRandomval(ctx context.Context, req *MsgUpdateSentRandomval) (*MsgUpdateSentRandomvalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSentRandomval not implemented")
}
func (*UnimplementedMsgServer) DeleteSentRandomval(ctx context.Context, req *MsgDeleteSentRandomval) (*MsgDeleteSentRandomvalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSentRandomval not implemented")
}
func (*UnimplementedMsgServer) CreateTimedoutRandomval(ctx context.Context, req *MsgCreateTimedoutRandomval) (*MsgCreateTimedoutRandomvalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTimedoutRandomval not implemented")
}
func (*UnimplementedMsgServer) UpdateTimedoutRandomval(ctx context.Context, req *MsgUpdateTimedoutRandomval) (*MsgUpdateTimedoutRandomvalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTimedoutRandomval not implemented")
}
func (*UnimplementedMsgServer) DeleteTimedoutRandomval(ctx context.Context, req *MsgDeleteTimedoutRandomval) (*MsgDeleteTimedoutRandomvalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTimedoutRandomval not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateRandom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRandom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRandom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genievot.random.random.Msg/CreateRandom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRandom(ctx, req.(*MsgCreateRandom))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SendReqRandomval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSendReqRandomval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SendReqRandomval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genievot.random.random.Msg/SendReqRandomval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SendReqRandomval(ctx, req.(*MsgSendReqRandomval))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSentRandomval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSentRandomval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSentRandomval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genievot.random.random.Msg/CreateSentRandomval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSentRandomval(ctx, req.(*MsgCreateSentRandomval))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSentRandomval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSentRandomval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSentRandomval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genievot.random.random.Msg/UpdateSentRandomval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSentRandomval(ctx, req.(*MsgUpdateSentRandomval))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSentRandomval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSentRandomval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSentRandomval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genievot.random.random.Msg/DeleteSentRandomval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSentRandomval(ctx, req.(*MsgDeleteSentRandomval))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTimedoutRandomval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTimedoutRandomval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTimedoutRandomval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genievot.random.random.Msg/CreateTimedoutRandomval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTimedoutRandomval(ctx, req.(*MsgCreateTimedoutRandomval))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTimedoutRandomval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTimedoutRandomval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTimedoutRandomval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genievot.random.random.Msg/UpdateTimedoutRandomval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTimedoutRandomval(ctx, req.(*MsgUpdateTimedoutRandomval))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTimedoutRandomval_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTimedoutRandomval)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTimedoutRandomval(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/genievot.random.random.Msg/DeleteTimedoutRandomval",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTimedoutRandomval(ctx, req.(*MsgDeleteTimedoutRandomval))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "genievot.random.random.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRandom",
			Handler:    _Msg_CreateRandom_Handler,
		},
		{
			MethodName: "SendReqRandomval",
			Handler:    _Msg_SendReqRandomval_Handler,
		},
		{
			MethodName: "CreateSentRandomval",
			Handler:    _Msg_CreateSentRandomval_Handler,
		},
		{
			MethodName: "UpdateSentRandomval",
			Handler:    _Msg_UpdateSentRandomval_Handler,
		},
		{
			MethodName: "DeleteSentRandomval",
			Handler:    _Msg_DeleteSentRandomval_Handler,
		},
		{
			MethodName: "CreateTimedoutRandomval",
			Handler:    _Msg_CreateTimedoutRandomval_Handler,
		},
		{
			MethodName: "UpdateTimedoutRandomval",
			Handler:    _Msg_UpdateTimedoutRandomval_Handler,
		},
		{
			MethodName: "DeleteTimedoutRandomval",
			Handler:    _Msg_DeleteTimedoutRandomval_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "random/tx.proto",
}

func (m *MsgCreateRandom) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRandom) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRandom) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Multiplier != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Multiplier))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateRandomResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRandomResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRandomResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSendReqRandomval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendReqRandomval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendReqRandomval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Multiplier) > 0 {
		i -= len(m.Multiplier)
		copy(dAtA[i:], m.Multiplier)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Multiplier)))
		i--
		dAtA[i] = 0x2a
	}
	if m.TimeoutTimestamp != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TimeoutTimestamp))
		i--
		dAtA[i] = 0x20
	}
	if len(m.ChannelID) > 0 {
		i -= len(m.ChannelID)
		copy(dAtA[i:], m.ChannelID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ChannelID)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Port) > 0 {
		i -= len(m.Port)
		copy(dAtA[i:], m.Port)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Port)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSendReqRandomvalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSendReqRandomvalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSendReqRandomvalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSentRandomval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSentRandomval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSentRandomval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Vrv) > 0 {
		i -= len(m.Vrv)
		copy(dAtA[i:], m.Vrv)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vrv)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Userid) > 0 {
		i -= len(m.Userid)
		copy(dAtA[i:], m.Userid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Userid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSentRandomvalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSentRandomvalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSentRandomvalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSentRandomval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSentRandomval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSentRandomval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Vrv) > 0 {
		i -= len(m.Vrv)
		copy(dAtA[i:], m.Vrv)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vrv)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Userid) > 0 {
		i -= len(m.Userid)
		copy(dAtA[i:], m.Userid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Userid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSentRandomvalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSentRandomvalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSentRandomvalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSentRandomval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSentRandomval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSentRandomval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSentRandomvalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSentRandomvalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSentRandomvalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimedoutRandomval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimedoutRandomval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimedoutRandomval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Vrv) > 0 {
		i -= len(m.Vrv)
		copy(dAtA[i:], m.Vrv)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vrv)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Userid) > 0 {
		i -= len(m.Userid)
		copy(dAtA[i:], m.Userid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Userid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimedoutRandomvalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimedoutRandomvalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimedoutRandomvalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimedoutRandomval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimedoutRandomval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimedoutRandomval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Vrv) > 0 {
		i -= len(m.Vrv)
		copy(dAtA[i:], m.Vrv)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Vrv)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Userid) > 0 {
		i -= len(m.Userid)
		copy(dAtA[i:], m.Userid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Userid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimedoutRandomvalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimedoutRandomvalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimedoutRandomvalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimedoutRandomval) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimedoutRandomval) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimedoutRandomval) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimedoutRandomvalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimedoutRandomvalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimedoutRandomvalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateRandom) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Multiplier != 0 {
		n += 1 + sovTx(uint64(m.Multiplier))
	}
	return n
}

func (m *MsgCreateRandomResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSendReqRandomval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Port)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ChannelID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TimeoutTimestamp != 0 {
		n += 1 + sovTx(uint64(m.TimeoutTimestamp))
	}
	l = len(m.Multiplier)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSendReqRandomvalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSentRandomval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Userid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vrv)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSentRandomvalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSentRandomval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Userid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vrv)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSentRandomvalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSentRandomval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSentRandomvalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTimedoutRandomval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Userid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vrv)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTimedoutRandomvalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTimedoutRandomval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Userid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Vrv)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTimedoutRandomvalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTimedoutRandomval) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTimedoutRandomvalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateRandom) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRandom: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRandom: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Multiplier", wireType)
			}
			m.Multiplier = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Multiplier |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRandomResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRandomResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRandomResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendReqRandomval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendReqRandomval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendReqRandomval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Port", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Port = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChannelID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChannelID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeoutTimestamp", wireType)
			}
			m.TimeoutTimestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeoutTimestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Multiplier", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Multiplier = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSendReqRandomvalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendReqRandomvalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendReqRandomvalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSentRandomval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSentRandomval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSentRandomval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Userid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Userid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vrv", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vrv = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSentRandomvalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSentRandomvalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSentRandomvalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSentRandomval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSentRandomval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSentRandomval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Userid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Userid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vrv", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vrv = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSentRandomvalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSentRandomvalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSentRandomvalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSentRandomval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSentRandomval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSentRandomval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSentRandomvalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSentRandomvalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSentRandomvalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimedoutRandomval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimedoutRandomval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimedoutRandomval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Userid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Userid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vrv", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vrv = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimedoutRandomvalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimedoutRandomvalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimedoutRandomvalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimedoutRandomval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimedoutRandomval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimedoutRandomval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Userid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Userid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vrv", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Vrv = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimedoutRandomvalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimedoutRandomvalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimedoutRandomvalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimedoutRandomval) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimedoutRandomval: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimedoutRandomval: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimedoutRandomvalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimedoutRandomvalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimedoutRandomvalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
